#!/usr/bin/env bash

# xhost +local:docker
# Create XDG runtime directory
export XDG_RUNTIME_DIR=/tmp/runtime-dir
mkdir -p $XDG_RUNTIME_DIR
chmod 700 $XDG_RUNTIME_DIR

# Set up other XDG directories
export XDG_DATA_HOME=/home/sail/.local/share
export XDG_CONFIG_HOME=/home/sail/.config
export XDG_CACHE_HOME=/home/sail/.cache
mkdir -p $XDG_DATA_HOME $XDG_CONFIG_HOME $XDG_CACHE_HOME

# Set up Mesa/OpenGL environment variables for software rendering
export LIBGL_ALWAYS_SOFTWARE=1
export MESA_LOADER_DRIVER_OVERRIDE=swrast
export EGL_PLATFORM=surfaceless
export LIBGL_DRI3_DISABLE=1
export RUST_BACKTRACE=1

# Make sure .cargo/bin is in PATH
if [ -d "/home/sail/.cargo/bin" ]; then
    export PATH="/home/sail/.cargo/bin:$PATH"
fi

# Only set CI=true if we're explicitly building, not for dev
if [[ "$*" == *"tauri build"* ]]; then
    export CI=true
else
    # For development purposes, allow Laravel Vite to run
    export CI=false
    export LARAVEL_BYPASS_ENV_CHECK=1
fi

# Start Xvfb only if it's not running
if ! pgrep -x "Xvfb" > /dev/null; then
    Xvfb :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset > /dev/null 2>&1 &
    sleep 2
    echo "Started Xvfb"
else
    echo "Xvfb is already running"
fi

if [ "$SUPERVISOR_PHP_USER" != "root" ] && [ "$SUPERVISOR_PHP_USER" != "sail" ]; then
    echo "You should set SUPERVISOR_PHP_USER to either 'sail' or 'root'."
    exit 1
fi

# Set up X11 permissions
if [ -f /home/sail/.Xauthority ]; then
    chmod 600 /home/sail/.Xauthority
    chown sail:sail /home/sail/.Xauthority
fi

# Set up video device permissions
if [ -e /dev/dri ]; then
    chmod 666 /dev/dri/*
fi

if [ ! -z "$WWWUSER" ]; then
    usermod -u $WWWUSER sail
fi

if [ ! -d /.composer ]; then
    mkdir /.composer
fi

chmod -R ugo+rw /.composer

# Set permissions for sail user on src-tauri directory if it exists
if [ -d /var/www/html/src-tauri ]; then
    chown -R sail:sail /var/www/html/src-tauri
fi

# Create log directory for Tauri output
mkdir -p /var/www/html/storage/logs/tauri
chmod -R 777 /var/www/html/storage/logs/tauri

if [ $# -gt 0 ]; then
    if [ "$SUPERVISOR_PHP_USER" = "root" ]; then
        exec "$@"
    else
        exec gosu $WWWUSER "$@"
    fi
else
    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
fi
